services:
  db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppassword
      POSTGRES_DB: booksdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"

  mongo:
    image: mongo:7
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbitpass
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  api:
    build:
      context: ..
      dockerfile: ./Main/Dockerfile
    container_name: api_service
    depends_on:
      - db
      - redis
      - mongo
      - rabbitmq
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ConnectionStrings__Default: "Host=db;Database=booksdb;Username=appuser;Password=apppassword"
    ports:
      - "8080:8080"
    restart: always

  worker:
    build:
      context: ..
      dockerfile: ./OrderWorkerService.cs/Dockerfile
    container_name: order_worker
    depends_on:
      - rabbitmq
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
    restart: always

volumes:
  pgdata:
  mongodata:
  rabbitmq_data:
